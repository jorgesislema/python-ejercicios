"""
Ejercicio 10: Diamante ASCII
============================

Objetivo:
Crear diferentes tipos de diamantes usando patrones geom√©tricos.

Conceptos a practicar:
- Simetr√≠a en dos ejes
- Patrones piramidales
- Figuras compuestas

Instrucciones:
1. Crear la parte superior del diamante (tri√°ngulo)
2. Crear la parte inferior (tri√°ngulo invertido)
3. Combinar ambas partes
4. A√±adir variaciones decorativas
"""

def dibujar_diamante_simple(tama√±o):
    """Dibuja un diamante simple"""
    print(f"\nüíé Diamante simple (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 10))
    
    # Parte superior del diamante
    for i in range(tama√±o):
        espacios = " " * (tama√±o - i - 1)
        asteriscos = "*" * (2 * i + 1)
        print(espacios + asteriscos)
    
    # Parte inferior del diamante
    for i in range(tama√±o - 2, -1, -1):
        espacios = " " * (tama√±o - i - 1)
        asteriscos = "*" * (2 * i + 1)
        print(espacios + asteriscos)

def dibujar_diamante_hueco(tama√±o):
    """Dibuja un diamante hueco"""
    print(f"\nüíç Diamante hueco (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 10))
    
    # Parte superior
    for i in range(tama√±o):
        espacios = " " * (tama√±o - i - 1)
        
        if i == 0:
            print(espacios + "*")
        else:
            espacios_internos = " " * (2 * i - 1)
            print(espacios + "*" + espacios_internos + "*")
    
    # Parte inferior
    for i in range(tama√±o - 2, -1, -1):
        espacios = " " * (tama√±o - i - 1)
        
        if i == 0:
            print(espacios + "*")
        else:
            espacios_internos = " " * (2 * i - 1)
            print(espacios + "*" + espacios_internos + "*")

def dibujar_diamante_emoji(tama√±o):
    """Dibuja un diamante con emojis"""
    print(f"\nüíé Diamante emoji (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 10))
    
    emojis = ["üíé", "üíç", "‚ú®", "üî∑", "üîπ"]
    
    # Parte superior
    for i in range(tama√±o):
        espacios = " " * (tama√±o - i - 1)
        emoji = emojis[i % len(emojis)]
        linea = emoji * (i + 1)
        print(espacios + linea)
    
    # Parte inferior
    for i in range(tama√±o - 2, -1, -1):
        espacios = " " * (tama√±o - i - 1)
        emoji = emojis[i % len(emojis)]
        linea = emoji * (i + 1)
        print(espacios + linea)

def dibujar_diamante_numerico(tama√±o):
    """Dibuja un diamante con n√∫meros"""
    print(f"\nüî¢ Diamante num√©rico (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 10))
    
    # Parte superior
    for i in range(tama√±o):
        espacios = " " * (tama√±o - i - 1)
        numeros = ""
        
        # N√∫meros ascendentes
        for j in range(i + 1):
            numeros += str(j + 1)
        
        # N√∫meros descendentes
        for j in range(i - 1, -1, -1):
            numeros += str(j + 1)
        
        print(espacios + numeros)
    
    # Parte inferior
    for i in range(tama√±o - 2, -1, -1):
        espacios = " " * (tama√±o - i - 1)
        numeros = ""
        
        # N√∫meros ascendentes
        for j in range(i + 1):
            numeros += str(j + 1)
        
        # N√∫meros descendentes
        for j in range(i - 1, -1, -1):
            numeros += str(j + 1)
        
        print(espacios + numeros)

def dibujar_diamante_con_brillo(tama√±o):
    """Dibuja un diamante con efecto de brillo"""
    print(f"\n‚ú® Diamante brillante (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 15))
    
    caracteres = [".", "*", "‚óÜ", "‚ô¶", "üíé"]
    
    # Parte superior
    for i in range(tama√±o):
        espacios = " " * (tama√±o - i - 1)
        linea = ""
        
        for j in range(2 * i + 1):
            # Crear efecto de brillo desde el centro
            distancia_centro = abs(j - i)
            char_index = min(distancia_centro, len(caracteres) - 1)
            linea += caracteres[char_index]
        
        print(espacios + linea)
    
    # Parte inferior
    for i in range(tama√±o - 2, -1, -1):
        espacios = " " * (tama√±o - i - 1)
        linea = ""
        
        for j in range(2 * i + 1):
            distancia_centro = abs(j - i)
            char_index = min(distancia_centro, len(caracteres) - 1)
            linea += caracteres[char_index]
        
        print(espacios + linea)

def main():
    """Funci√≥n principal"""
    print("üíé GENERADOR DE DIAMANTES ASCII")
    print("=" * 40)
    
    print("\nSelecciona el tipo de diamante:")
    print("1. Diamante simple")
    print("2. Diamante hueco")
    print("3. Diamante emoji")
    print("4. Diamante num√©rico")
    print("5. Diamante brillante")
    print("6. Mostrar todos")
    
    try:
        opcion = input("\nElige una opci√≥n (1-6): ")
        tama√±o = int(input("Tama√±o del diamante (3-8): "))
        
        if tama√±o < 3 or tama√±o > 8:
            print("‚ùå El tama√±o debe estar entre 3 y 8")
            return
        
        if opcion == "1":
            dibujar_diamante_simple(tama√±o)
        elif opcion == "2":
            dibujar_diamante_hueco(tama√±o)
        elif opcion == "3":
            dibujar_diamante_emoji(tama√±o)
        elif opcion == "4":
            dibujar_diamante_numerico(tama√±o)
        elif opcion == "5":
            dibujar_diamante_con_brillo(tama√±o)
        elif opcion == "6":
            dibujar_diamante_simple(tama√±o)
            dibujar_diamante_hueco(tama√±o)
            dibujar_diamante_emoji(tama√±o)
            dibujar_diamante_numerico(tama√±o)
            dibujar_diamante_con_brillo(tama√±o)
        else:
            print("‚ùå Opci√≥n no v√°lida")
            
    except ValueError:
        print("‚ùå Por favor ingresa un n√∫mero v√°lido")

if __name__ == "__main__":
    main()
