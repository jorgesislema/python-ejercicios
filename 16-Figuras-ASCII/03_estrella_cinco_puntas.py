"""
Ejercicio 3: Estrella de Cinco Puntas
====================================

Objetivo:
Crear diferentes tipos de estrellas usando caracteres ASCII.

Conceptos a practicar:
- Patrones complejos con bucles
- C√°lculos matem√°ticos para coordenadas
- Arte ASCII avanzado

Instrucciones:
1. Crear estrellas de diferentes tama√±os
2. Implementar variaciones de estrellas
3. Usar caracteres especiales para efectos visuales
"""

def dibujar_estrella_simple():
    """Dibuja una estrella simple peque√±a"""
    print("\n‚≠ê Estrella simple:")
    print("=" * 20)
    
    estrella = [
        "    *    ",
        "   ***   ",
        "  *****  ",
        " ******* ",
        "*********",
        " ******* ",
        "  *****  ",
        "   ***   ",
        "    *    "
    ]
    
    for linea in estrella:
        print(linea)

def dibujar_estrella_grande():
    """Dibuja una estrella m√°s grande"""
    print("\nüåü Estrella grande:")
    print("=" * 30)
    
    estrella = [
        "        *        ",
        "       ***       ",
        "      *****      ",
        "     *******     ",
        "    *********    ",
        "   ***********   ",
        "  *************  ",
        " *************** ",
        "*****************",
        " *************** ",
        "  *************  ",
        "   ***********   ",
        "    *********    ",
        "     *******     ",
        "      *****      ",
        "       ***       ",
        "        *        "
    ]
    
    for linea in estrella:
        print(linea)

def dibujar_estrella_hueca(tama√±o):
    """Dibuja una estrella hueca parametrizable"""
    print(f"\n‚ú® Estrella hueca (tama√±o {tama√±o}):")
    print("=" * (tama√±o * 2 + 10))
    
    centro = tama√±o
    
    for i in range(tama√±o * 2 + 1):
        linea = ""
        for j in range(tama√±o * 2 + 1):
            # Calcular distancia del centro
            dx = abs(j - centro)
            dy = abs(i - centro)
            
            # Patrones para formar estrella
            if (dx == 0 and dy <= tama√±o) or \
               (dy == 0 and dx <= tama√±o) or \
               (dx == dy and dx <= tama√±o) or \
               (dx + dy == tama√±o):
                linea += "*"
            else:
                linea += " "
        print(linea)

def dibujar_estrella_navide√±a():
    """Dibuja una estrella navide√±a decorativa"""
    print("\nüéÑ Estrella navide√±a:")
    print("=" * 25)
    
    estrella = [
        "       ‚≠ê       ",
        "      /|\\      ",
        "     / | \\     ",
        "    /  |  \\    ",
        "   ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê   ",
        "    \\  |  /    ",
        "     \\ | /     ",
        "      \\|/      ",
        "       |       ",
        "      ‚≠ê‚≠ê      ",
        "     ‚≠ê‚≠ê‚≠ê     ",
        "    ‚≠ê‚≠ê‚≠ê‚≠ê    ",
        "   ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê   ",
        "  ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê  ",
        " ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê ",
        "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"
    ]
    
    for linea in estrella:
        print(linea)

def dibujar_constelacion():
    """Dibuja una constelaci√≥n de estrellas"""
    print("\nüåå Constelaci√≥n:")
    print("=" * 40)
    
    constelacion = [
        "      *           *        ",
        "        *     *           ",
        "  *         *       *     ",
        "      *   ‚≠ê    *        ",
        "*           *             ",
        "    *     *       ‚≠ê      ",
        "        *           *     ",
        "  ‚≠ê       *              ",
        "      *         *    *    ",
        "            ‚≠ê            ",
        "  *       *       *       ",
        "        *     *     ‚≠ê    ",
        "    *                 *   ",
        "          *       *       ",
        "      ‚≠ê      *          ",
    ]
    
    for linea in constelacion:
        print(linea)

def dibujar_estrella_ascii_art():
    """Dibuja estrella con ASCII art avanzado"""
    print("\nüí´ Estrella ASCII Art:")
    print("=" * 35)
    
    estrella = [
        "           /\\           ",
        "          /  \\          ",
        "         /    \\         ",
        "        /      \\        ",
        "       /        \\       ",
        "      /    /\\    \\      ",
        "     /    /  \\    \\     ",
        "    /    /    \\    \\    ",
        "   /____/      \\____\\   ",
        "   \\              /    ",
        "    \\            /     ",
        "     \\          /      ",
        "      \\        /       ",
        "       \\      /        ",
        "        \\    /         ",
        "         \\  /          ",
        "          \\/           "
    ]
    
    for linea in estrella:
        print(linea)

def main():
    """Funci√≥n principal"""
    print("üåü GENERADOR DE ESTRELLAS ASCII")
    print("=" * 40)
    
    print("\nSelecciona el tipo de estrella:")
    print("1. Estrella simple")
    print("2. Estrella grande")
    print("3. Estrella hueca (personalizable)")
    print("4. Estrella navide√±a")
    print("5. Constelaci√≥n")
    print("6. Estrella ASCII Art")
    print("7. Mostrar todas")
    
    try:
        opcion = input("\nElige una opci√≥n (1-7): ")
        
        if opcion == "1":
            dibujar_estrella_simple()
        elif opcion == "2":
            dibujar_estrella_grande()
        elif opcion == "3":
            tama√±o = int(input("Ingresa el tama√±o (3-8): "))
            if 3 <= tama√±o <= 8:
                dibujar_estrella_hueca(tama√±o)
            else:
                print("‚ùå Tama√±o debe estar entre 3 y 8")
        elif opcion == "4":
            dibujar_estrella_navide√±a()
        elif opcion == "5":
            dibujar_constelacion()
        elif opcion == "6":
            dibujar_estrella_ascii_art()
        elif opcion == "7":
            dibujar_estrella_simple()
            dibujar_estrella_grande()
            dibujar_estrella_hueca(5)
            dibujar_estrella_navide√±a()
            dibujar_constelacion()
            dibujar_estrella_ascii_art()
        else:
            print("‚ùå Opci√≥n no v√°lida")
            
    except ValueError:
        print("‚ùå Por favor ingresa un n√∫mero v√°lido")

if __name__ == "__main__":
    main()
