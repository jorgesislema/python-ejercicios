"""
Ejercicio 4: √Årbol de Navidad
============================

Objetivo:
Crear diferentes tipos de √°rboles navide√±os con tronco, decoraciones y estrella.

Conceptos a practicar:
- Combinaci√≥n de m√∫ltiples formas
- Patrones de repetici√≥n
- Decoraciones con caracteres especiales

Instrucciones:
1. Crear √°rboles de diferentes alturas
2. A√±adir tronco al √°rbol
3. Decorar con ornamentos y luces
4. Coronar con estrella
"""

def dibujar_arbol_simple(altura):
    """Dibuja un √°rbol de Navidad simple"""
    print(f"\nüéÑ √Årbol simple (altura {altura}):")
    print("=" * (altura * 2 + 10))
    
    # Estrella en la cima
    espacios_estrella = " " * altura
    print(espacios_estrella + "‚≠ê")
    
    # Cuerpo del √°rbol
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)
        hojas = "üü¢" * i
        print(espacios + hojas)
    
    # Tronco
    espacios_tronco = " " * (altura - 1)
    print(espacios_tronco + "üü´üü´")
    print(espacios_tronco + "üü´üü´")

def dibujar_arbol_decorado(altura):
    """Dibuja un √°rbol decorado con ornamentos"""
    print(f"\nüéÖ √Årbol decorado (altura {altura}):")
    print("=" * (altura * 2 + 15))
    
    # Estrella
    espacios_estrella = " " * altura
    print(espacios_estrella + "‚≠ê")
    
    # Cuerpo con decoraciones
    decoraciones = ["üî¥", "üü°", "üîµ", "üü£", "üü†", "‚ö™"]
    
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)
        linea = ""
        
        for j in range(i):
            if (i + j) % 3 == 0:
                # A√±adir decoraci√≥n
                linea += decoraciones[(i + j) % len(decoraciones)]
            else:
                linea += "üü¢"
        
        print(espacios + linea)
    
    # Tronco
    espacios_tronco = " " * (altura - 1)
    print(espacios_tronco + "üü´üü´")
    print(espacios_tronco + "üü´üü´")

def dibujar_arbol_ascii(altura):
    """Dibuja un √°rbol usando caracteres ASCII"""
    print(f"\nüå≤ √Årbol ASCII (altura {altura}):")
    print("=" * (altura * 2 + 10))
    
    # Estrella
    espacios_estrella = " " * altura
    print(espacios_estrella + "*")
    
    # Cuerpo del √°rbol
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)
        hojas = "^" * (2 * i - 1)
        print(espacios + hojas)
    
    # Tronco
    for _ in range(2):
        espacios_tronco = " " * (altura - 1)
        print(espacios_tronco + "|||")

def dibujar_arbol_con_luces(altura):
    """Dibuja un √°rbol con luces parpadeantes"""
    print(f"\n‚ú® √Årbol con luces (altura {altura}):")
    print("=" * (altura * 2 + 15))
    
    # Estrella brillante
    espacios_estrella = " " * altura
    print(espacios_estrella + "üåü")
    
    # Cuerpo con luces
    luces = ["üí°", "üîÜ", "‚ú®", "üí´", "üåü"]
    
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)
        linea = ""
        
        for j in range(i):
            if (i + j) % 4 == 0:
                # A√±adir luz
                linea += luces[(i + j) % len(luces)]
            else:
                linea += "üü¢"
        
        print(espacios + linea)
    
    # Tronco decorativo
    espacios_tronco = " " * (altura - 1)
    print(espacios_tronco + "üü´üü´")
    print(espacios_tronco + "üéÅüéÅ")  # Regalos debajo

def dibujar_bosque(num_arboles):
    """Dibuja un peque√±o bosque"""
    print(f"\nüå≤üå≤ Bosque de {num_arboles} √°rboles:")
    print("=" * (num_arboles * 8 + 10))
    
    alturas = [3, 4, 3, 5, 3][:num_arboles]
    max_altura = max(alturas)
    
    # Dibujar l√≠nea por l√≠nea
    for fila in range(max_altura + 3):  # +3 para estrella y tronco
        linea = ""
        
        for i, altura in enumerate(alturas):
            if fila == 0:
                # Estrellas
                if altura >= max_altura - 1:
                    linea += "  ‚≠ê  "
                else:
                    linea += "      "
            elif fila <= altura:
                # Cuerpo del √°rbol
                nivel = fila
                if nivel <= altura:
                    espacios = " " * (3 - min(nivel, 2))
                    hojas = "üü¢" * min(nivel, 3)
                    linea += espacios + hojas + espacios
                else:
                    linea += "      "
            else:
                # Tronco
                linea += "  üü´  "
        
        print(linea)

def dibujar_arbol_nieve(altura):
    """Dibuja un √°rbol con nieve"""
    print(f"\n‚ùÑÔ∏è √Årbol con nieve (altura {altura}):")
    print("=" * (altura * 2 + 15))
    
    # Estrella
    espacios_estrella = " " * altura
    print(espacios_estrella + "‚≠ê")
    
    # Cuerpo con nieve
    for i in range(1, altura + 1):
        espacios = " " * (altura - i)
        linea = ""
        
        for j in range(i):
            if (i + j) % 5 == 0:
                linea += "‚ùÑÔ∏è"  # Copos de nieve
            elif (i + j) % 3 == 0:
                linea += "‚ö™"  # Nieve acumulada
            else:
                linea += "üü¢"
        
        print(espacios + linea)
    
    # Tronco con nieve
    espacios_tronco = " " * (altura - 1)
    print(espacios_tronco + "üü´üü´")
    print(espacios_tronco + "‚ö™‚ö™")  # Nieve en la base

def main():
    """Funci√≥n principal"""
    print("üéÑ GENERADOR DE √ÅRBOLES DE NAVIDAD")
    print("=" * 45)
    
    print("\nSelecciona el tipo de √°rbol:")
    print("1. √Årbol simple")
    print("2. √Årbol decorado")
    print("3. √Årbol ASCII")
    print("4. √Årbol con luces")
    print("5. Bosque")
    print("6. √Årbol con nieve")
    print("7. Mostrar todos")
    
    try:
        opcion = input("\nElige una opci√≥n (1-7): ")
        
        if opcion in ["1", "2", "3", "4", "6"]:
            altura = int(input("Ingresa la altura del √°rbol (3-10): "))
            if altura < 3 or altura > 10:
                print("‚ùå La altura debe estar entre 3 y 10")
                return
                
            if opcion == "1":
                dibujar_arbol_simple(altura)
            elif opcion == "2":
                dibujar_arbol_decorado(altura)
            elif opcion == "3":
                dibujar_arbol_ascii(altura)
            elif opcion == "4":
                dibujar_arbol_con_luces(altura)
            elif opcion == "6":
                dibujar_arbol_nieve(altura)
                
        elif opcion == "5":
            num_arboles = int(input("¬øCu√°ntos √°rboles en el bosque? (2-5): "))
            if 2 <= num_arboles <= 5:
                dibujar_bosque(num_arboles)
            else:
                print("‚ùå N√∫mero de √°rboles debe estar entre 2 y 5")
                
        elif opcion == "7":
            dibujar_arbol_simple(5)
            dibujar_arbol_decorado(4)
            dibujar_arbol_ascii(5)
            dibujar_arbol_con_luces(4)
            dibujar_bosque(3)
            dibujar_arbol_nieve(5)
        else:
            print("‚ùå Opci√≥n no v√°lida")
            
    except ValueError:
        print("‚ùå Por favor ingresa un n√∫mero v√°lido")

if __name__ == "__main__":
    main()
