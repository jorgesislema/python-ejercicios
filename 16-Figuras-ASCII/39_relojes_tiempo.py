"""
Ejercicio 39: Relojes y Tiempo ASCII

Objetivo:
- Crear diferentes tipos de relojes ASCII
- Mostrar hora actual en ASCII
- Incluir relojes anal√≥gicos y digitales
- Crear cron√≥metros y temporizadores

Conceptos:
- Manejo de tiempo en Python
- Representaci√≥n visual de n√∫meros
- Algoritmos de posicionamiento de manecillas
- Interfaz de usuario temporal
"""

import time
import datetime
import os

def reloj_digital_basico():
    """Reloj digital b√°sico con n√∫meros ASCII"""
    print("üïê RELOJ DIGITAL B√ÅSICO üïê")
    print("‚ïê" * 50)
    
    # Obtener hora actual
    ahora = datetime.datetime.now()
    hora = ahora.strftime("%H:%M:%S")
    
    # N√∫meros ASCII grandes
    numeros = {
        '0': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '1': [
            "  ‚ñì  ",
            " ‚ñì‚ñì  ",
            "  ‚ñì  ",
            "  ‚ñì  ",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '2': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì    ",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '3': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '4': [
            "‚ñì   ‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "    ‚ñì"
        ],
        '5': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì    ",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '6': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì    ",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '7': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "   ‚ñì ",
            "  ‚ñì  ",
            " ‚ñì   "
        ],
        '8': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        '9': [
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "‚ñì   ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì",
            "    ‚ñì",
            "‚ñì‚ñì‚ñì‚ñì‚ñì"
        ],
        ':': [
            "     ",
            "  ‚ñì  ",
            "     ",
            "  ‚ñì  ",
            "     "
        ]
    }
    
    # Mostrar hora en ASCII
    for i in range(5):
        linea = ""
        for char in hora:
            if char in numeros:
                linea += numeros[char][i] + "  "
        print(linea)
    
    print(f"\nHora actual: {hora}")
    print(f"Fecha: {ahora.strftime('%d/%m/%Y')}")

def reloj_analogico():
    """Reloj anal√≥gico ASCII"""
    print("üïê RELOJ ANAL√ìGICO üïê")
    print("‚ïê" * 40)
    
    ahora = datetime.datetime.now()
    hora = ahora.hour % 12
    minuto = ahora.minute
    
    # Base del reloj
    reloj = [
        "    12    ",
        "  ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ ",
        "9 ‚îÇ     ‚îÇ 3",
        "  ‚îÇ  ‚Ä¢  ‚îÇ ",
        "  ‚îÇ     ‚îÇ ",
        "  ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ ",
        "     6    "
    ]
    
    # Mostrar reloj base
    for linea in reloj:
        print(linea)
    
    print(f"\nHora: {ahora.strftime('%I:%M %p')}")
    print("Manecilla corta: hora")
    print("Manecilla larga: minutos")

def cronometro_ascii():
    """Cron√≥metro ASCII funcional"""
    print("‚è±Ô∏è CRON√ìMETRO ASCII ‚è±Ô∏è")
    print("‚ïê" * 40)
    
    print("Presiona Enter para iniciar/pausar")
    print("Escribe 'reset' para reiniciar")
    print("Escribe 'salir' para terminar")
    
    tiempo_inicio = None
    tiempo_pausado = 0
    pausado = True
    
    while True:
        if not pausado and tiempo_inicio:
            tiempo_actual = time.time() - tiempo_inicio - tiempo_pausado
            minutos = int(tiempo_actual // 60)
            segundos = int(tiempo_actual % 60)
            centesimas = int((tiempo_actual % 1) * 100)
            
            # Limpiar pantalla
            os.system('cls' if os.name == 'nt' else 'clear')
            print("‚è±Ô∏è CRON√ìMETRO ASCII ‚è±Ô∏è")
            print("‚ïê" * 40)
            print(f"‚è∞ {minutos:02d}:{segundos:02d}.{centesimas:02d} ‚è∞")
            print("\nüî• CRON√ìMETRO EN MARCHA üî•")
            print("Enter: pausar | 'reset': reiniciar | 'salir': terminar")
        
        # Verificar entrada sin bloquear
        try:
            import select
            import sys
            
            if select.select([sys.stdin], [], [], 0.01) == ([sys.stdin], [], []):
                entrada = input().strip().lower()
                
                if entrada == '':
                    if pausado:
                        if tiempo_inicio is None:
                            tiempo_inicio = time.time()
                        pausado = False
                        print("¬°Cron√≥metro iniciado!")
                    else:
                        tiempo_pausado += time.time() - tiempo_inicio - tiempo_pausado
                        pausado = True
                        print("Cron√≥metro pausado")
                elif entrada == 'reset':
                    tiempo_inicio = None
                    tiempo_pausado = 0
                    pausado = True
                    print("Cron√≥metro reiniciado")
                elif entrada == 'salir':
                    break
        except:
            # Para Windows sin select
            print("Presiona Enter para interactuar:")
            entrada = input().strip().lower()
            
            if entrada == '':
                if pausado:
                    if tiempo_inicio is None:
                        tiempo_inicio = time.time()
                    pausado = False
                    print("¬°Cron√≥metro iniciado!")
                else:
                    pausado = True
                    print("Cron√≥metro pausado")
            elif entrada == 'reset':
                tiempo_inicio = None
                tiempo_pausado = 0
                pausado = True
                print("Cron√≥metro reiniciado")
            elif entrada == 'salir':
                break
        
        time.sleep(0.01)

def reloj_mundial():
    """Relojes de diferentes zonas horarias"""
    print("üåç RELOJES MUNDIALES üåç")
    print("‚ïê" * 60)
    
    import pytz
    
    zonas = [
        ('Mexico/General', 'CIUDAD DE M√âXICO', 'üá≤üáΩ'),
        ('US/Eastern', 'NUEVA YORK', 'üá∫üá∏'),
        ('Europe/London', 'LONDRES', 'üá¨üáß'),
        ('Europe/Paris', 'PAR√çS', 'üá´üá∑'),
        ('Asia/Tokyo', 'TOKIO', 'üáØüáµ'),
        ('Australia/Sydney', 'S√çDNEY', 'üá¶üá∫')
    ]
    
    try:
        for zona, ciudad, bandera in zonas:
            tz = pytz.timezone(zona)
            tiempo_local = datetime.datetime.now(tz)
            print(f"{bandera} {ciudad:15} {tiempo_local.strftime('%H:%M:%S')} {tiempo_local.strftime('%d/%m/%Y')}")
    except ImportError:
        print("Para mostrar zonas horarias, instala: pip install pytz")
        # Alternativa sin pytz
        ahora = datetime.datetime.now()
        print(f"üá≤üáΩ CIUDAD DE M√âXICO  {ahora.strftime('%H:%M:%S')} {ahora.strftime('%d/%m/%Y')}")

def temporizador_ascii():
    """Temporizador cuenta regresiva"""
    print("‚è≤Ô∏è TEMPORIZADOR ASCII ‚è≤Ô∏è")
    print("‚ïê" * 40)
    
    try:
        minutos = int(input("Ingresa minutos: "))
        segundos = int(input("Ingresa segundos adicionales: "))
        
        total_segundos = minutos * 60 + segundos
        
        print(f"\n‚è≤Ô∏è Iniciando cuenta regresiva: {minutos:02d}:{segundos:02d}")
        time.sleep(2)
        
        while total_segundos > 0:
            os.system('cls' if os.name == 'nt' else 'clear')
            print("‚è≤Ô∏è TEMPORIZADOR ASCII ‚è≤Ô∏è")
            print("‚ïê" * 40)
            
            mins = total_segundos // 60
            secs = total_segundos % 60
            
            print(f"\n‚è∞ {mins:02d}:{secs:02d} ‚è∞")
            
            if total_segundos <= 10:
                print("üî• ¬°√öLTIMOS SEGUNDOS! üî•")
            elif total_segundos <= 60:
                print("‚ö†Ô∏è  Menos de un minuto ‚ö†Ô∏è")
            
            time.sleep(1)
            total_segundos -= 1
        
        # Alarma
        os.system('cls' if os.name == 'nt' else 'clear')
        print("üö® ¬°TIEMPO TERMINADO! üö®")
        print("‚è∞ 00:00 ‚è∞")
        print("üîî ¬°RING RING RING! üîî")
        
    except ValueError:
        print("‚ùå Por favor ingresa n√∫meros v√°lidos")

def reloj_binario():
    """Reloj en c√≥digo binario"""
    print("üíª RELOJ BINARIO üíª")
    print("‚ïê" * 40)
    
    ahora = datetime.datetime.now()
    hora = ahora.hour
    minuto = ahora.minute
    segundo = ahora.second
    
    def a_binario(numero):
        return format(numero, '06b')  # 6 bits
    
    print("Hora en binario (24h):")
    print(f"Hora:    {hora:02d} = {a_binario(hora)}")
    print(f"Minuto:  {minuto:02d} = {a_binario(minuto)}")
    print(f"Segundo: {segundo:02d} = {a_binario(segundo)}")
    
    print("\nRepresentaci√≥n visual:")
    print("H H M M S S")
    print("5 4 5 4 5 4  <- Posici√≥n del bit")
    print("‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îÇ")
    
    # Crear representaci√≥n visual
    h_bin = a_binario(hora)
    m_bin = a_binario(minuto)
    s_bin = a_binario(segundo)
    
    for i in range(6):
        h_bit = "‚óè" if h_bin[i] == '1' else "‚óã"
        m_bit = "‚óè" if m_bin[i] == '1' else "‚óã"
        s_bit = "‚óè" if s_bin[i] == '1' else "‚óã"
        print(f"{h_bit} {h_bit} {m_bit} {m_bit} {s_bit} {s_bit}")

def menu_principal():
    """Men√∫ principal del programa"""
    while True:
        print("\n" + "‚ïê" * 50)
        print("üïê RELOJES Y TIEMPO ASCII üïê")
        print("‚ïê" * 50)
        print("1. Reloj digital b√°sico")
        print("2. Reloj anal√≥gico")
        print("3. Cron√≥metro ASCII")
        print("4. Relojes mundiales")
        print("5. Temporizador cuenta regresiva")
        print("6. Reloj binario")
        print("0. Salir")
        print("‚ïê" * 50)
        
        opcion = input("Selecciona una opci√≥n: ")
        
        if opcion == "1":
            reloj_digital_basico()
        elif opcion == "2":
            reloj_analogico()
        elif opcion == "3":
            cronometro_ascii()
        elif opcion == "4":
            reloj_mundial()
        elif opcion == "5":
            temporizador_ascii()
        elif opcion == "6":
            reloj_binario()
        elif opcion == "0":
            print("¬°Hasta luego! üïê")
            break
        else:
            print("Opci√≥n no v√°lida")
        
        input("\nPresiona Enter para continuar...")

if __name__ == "__main__":
    menu_principal()
